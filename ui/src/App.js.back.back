// import React from 'react';
// import SignIn from './components/signIn'

// function App() {
//   return (
//     <SignIn></SignIn>
//   );
// }

// export default App;

import React, { Component } from 'react'
import Typography from '@material-ui/core/Typography'
import TextField from '@material-ui/core/TextField'
import Paper from '@material-ui/core/Paper'
import Button from '@material-ui/core/Button'
import { List, ListItem, ListItemText, ListItemSecondaryAction,
  IconButton} from '@material-ui/core'

import Delete from '@material-ui/icons/Delete'

import { withStyles } from '@material-ui/core/styles'

const styles = {
  root: {
    margin: 20,
    padding: 20,
    maxWidth: 400
  },
  form: {
    display: 'flex',
    alignItems: 'baseline',
    justifyContent: 'space-evenly'
  }
}

export default withStyles(styles) (class App extends Component {
  // state = {
  //   exercises: [],
  //   title: ''
  // }
  state = {
    exercises: [
      { id: 1, title: 'Bench Press' },
      { id: 2, title: 'Deadlift' },
      { id: 3, title: 'Squats' }
    ],
    title: ''
  }
  
  handleChange = ({ target: { name, value } }) =>
    this.setState({
      [name]: value
  })

  handleCreate = e => {
    e.preventDefault()  // button default submit behavior must be prevent and do self logic
    if (this.state.title) {
      this.setState(({ exercises, title }) => ({
        exercises: [
          ...exercises,
          {
            title,
            id: Date.now()
          }
        ],
        title: ''
      }))
    }
  }

  handleDelete = id =>
    this.setState(({ exercises }) => ({
      exercises: exercises.filter(ex => ex.id !== id)
  }))

  render() {
    const { title, exercises } = this.state
    const { classes } = this.props
    return <Paper className={classes.root}>
              <Typography variant='display1' align='center' gutterBottom>
              Exercises
            </Typography>
            <form onSubmit={this.handleCreate} className={classes.form}>
                <TextField
                  name='title'
                  label='Exercise'
                  value={title}
                  onChange={this.handleChange}
                  margin='normal'
                />
                <Button
                  type='submit'
                  color='primary'
                  variant='contained'
                >
                  Create
                </Button>
              </form>
              <List>
                {exercises.map(({ id, title }) =>
                  <ListItem key={id}>
                    <ListItemText primary={title} />
                    <ListItemSecondaryAction>
                      <IconButton color='primary' onClick={() => this.handleDelete(id)}>
                        <Delete />
                      </IconButton>
                    </ListItemSecondaryAction>
                  </ListItem> 
                )}
              </List>
              
         </Paper>
  }
})